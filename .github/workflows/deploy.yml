name: Deploy resources

on:
  push:
    branches:
      - master

jobs:
  feast_apply:
    runs-on: ubuntu-latest
    env:
      FEAST_VERSION: "0.25.0"
      ENV: "prod"
    steps:
      - name: Setup Python
        id: setup-python
        uses: actions/setup-python@v2
        with:
          python-version: "3.8"
          architecture: x64

      - uses: actions/checkout@v2

      - name: Install dependencies
        run: |
          pip install 'feast[gcp,redis]=='$FEAST_VERSION

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v0
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}
          service_account_key: ${{ secrets.GCP_SA_KEY }}
          export_default_credentials: true

      - name: Use gcloud CLI
        run: gcloud info

      - name: Feast Apply
        id: apply
        if: github.ref == 'refs/heads/master' && github.event_name == 'push'
        env:
          FEAST_USAGE: "False"
          IS_TEST: "True"
        run: |
          feast --chdir feature_repo/ --feature-store-yaml feature_repo/$ENV/feature_store.yaml apply

  terraform_apply:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v0
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}
          service_account_key: ${{ secrets.GCP_SA_KEY }}
          export_default_credentials: true

      - name: Use gcloud CLI
        run: gcloud info

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1

      - name: Init Terraform
        id: init
        run: |
          terraform -chdir=infra/ init

      - name: Terraform Apply
        id: apply
        if: github.ref == 'refs/heads/master' && github.event_name == 'push'
        run: |
          terraform -chdir=infra/ apply -var="cloud_run_env=prod" -auto-approve -input=false
        continue-on-error: true

      - name: Terraform Apply Status
        if: steps.apply.outcome == 'failure'
        run: exit 1
